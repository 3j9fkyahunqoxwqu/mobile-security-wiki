{"name":"Android-security-wiki","tagline":"","body":"##Android Malwares\r\n\r\n* [Contagio Mini Dump](http://contagiominidump.blogspot.com/) - Contagio mobile mini-dump offers an upload dropbox for you to share your mobile malware samples.\r\n\r\n* [Android Malwares Databases](https://code.google.com/p/androguard/wiki/DatabaseAndroidMalwares) - No Longer Maintained.\r\n\r\n##Online Analyzers\r\n\r\n* [AndroidTotal](http://andrototal.org/) - AndroTotal is a free service to scan suspicious APKs against multiple mobile antivirus apps.\r\n\r\n* [Anubis](http://anubis.iseclab.org/) - Malware Analysis for Unknown Binaries.\r\n\r\n* [App360Scan](http://www.app360scan.com/) - Tells about permissons used by an Application and what harm it can cause to users.\r\n\r\n* [CopperDroid](http://copperdroid.isg.rhul.ac.uk/copperdroid/) - It automatically perform out-of-the-box dynamic behavioral analysis of Android malware.\r\n\r\n* [Dexter](https://dexter.bluebox.com/) - Dexter is an interactive Android software analysis environment with collaboration features.\r\n\r\n* [Mobile Sandbox](http://mobilesandbox.org/) - The Mobile-Sandbox provides static and dynamic malware analysis combined with machine learning techniques for Android applications. \r\n\r\n##Tutorials\r\n\r\n* [Android Application Security Series](https://manifestsecurity.com/android-application-security/) - A simple and elaborative series on Android Application Security. Beneficial for Android Security Professionals and Developers.\r\n\r\n* [Android Forensics Course](http://opensecuritytraining.info/AndroidForensics.html)\r\n\r\n* [Introduction to ARM](http://opensecuritytraining.info/IntroARM.html)\r\n\r\n\r\n\r\n##Android Forensics\r\n\r\n* [Android Forensics](https://github.com/viaforensics/android-forensics) - Open Source Android Forensics App and Framework\r\n\r\n* [Android Data Extractor Lite](https://github.com/mspreitz/ADEL)\r\n\r\n* [BitPim](http://www.bitpim.org/) - BitPim is a program that allows you to view and manipulate data on many CDMA \r\nphones from LG, Samsung, Sanyo and other manufacturers.\r\n\r\n* [LiME](https://github.com/504ensicsLabs/LiME) - LiME (formerly DMD) is a Loadable Kernel Module (LKM), which allows the acquisition of volatile memory from Linux and Linux-based devices, such as those powered by Android.\r\n\r\n* [Open Source Android Forensics](http://www.osaf-community.org/)\r\n\r\n* [P2P-ADB](https://github.com/kosborn/p2p-adb/) - Phone to Phone Android Debug Bridge - A project for \"debugging\" phones from other phones.\r\n\r\n* [pySimReader](https://www.isecpartners.com/tools/mobile-security/pysimreader.aspx) - It allows users to write out arbitrary raw SMS PDUs to a SIM card.\r\n\r\n\r\n##Development Tools\r\n\r\n* [Android SDK](https://developer.android.com/sdk/index.html) - The Android software development kit (SDK) includes a comprehensive set of development tools. These include a debugger, libraries, a handset emulator based on QEMU, documentation, sample code, and tutorials.\r\n\r\n* [Android NDK](https://developer.android.com/tools/sdk/ndk/index.html) - The NDK is a toolset that allows you to implement parts of your app using native-code languages such as C and C++.\r\n\r\n* [ADT Bundle](https://developer.android.com/sdk/index.html) -  The Android Developer Tools(ADT) bundle is a single download that contains everything for developers to start creating Android Application\r\n\t* Android Studio IDE or Eclipse IDE\r\n    * Android SDK tools\r\n    * Android 5.0 (Lollipop) Platform\r\n    * Android 5.0 emulator system image with Google APIs\r\n\r\n* [Root Tools](https://github.com/Stericson/RootTools) - RootTools provides rooted developers a standardized set of tools for use in the development of rooted applications.\r\n\r\n##Android Testing Distributions\r\n\r\n* [Appie](https://manifestsecurity.com/appie) - A portable software package for Android Pentesting and an awesome alternative to existing Virtual machines.\r\n\r\n* [Android Tamer](https://androidtamer.com) - Android Tamer is a Virtual / Live Platform for Android Security professionals.\r\n\r\n* [AppUse](https://appsec-labs.com/AppUse/) - AppUse is a VM (Virtual Machine) developed by AppSec Labs.\r\n\r\n* [Mobisec](http://sourceforge.net/projects/mobisec/) - \r\nMobile security testing live environment\r\n\r\n* [Now Secure App Testing Suite:Community Edition](https://www.nowsecure.com/apptesting/community/#viaprotect)\r\n\r\n* [Santoku Linux](https://santoku-linux.com/) - Santoku Linux is a virtual machine developed by NowSecure Mobile.\r\n\r\n##Static Analysis Tools\r\n\r\n* [Androwarn](https://github.com/maaaaz/androwarn/):- Yet another static code analyzer for malicious Android applications\r\n\r\n* [ApkAnalyser](https://github.com/sonyxperiadev/ApkAnalyser) - ApkAnalyser is a static, virtual analysis tool for examining and validating the development work of your Android app.\r\n\r\n* [APKInspector](https://github.com/honeynet/apkinspector/) - APKinspector is a powerful GUI tool for analysts to analyze the Android applications.\r\n\r\n* [Error-Prone](https://github.com/google/error-prone) - Catch common Java mistakes as compile-time errors\r\n\r\n* [FlowDroid](http://sseblog.ec-spride.de/tools/flowdroid/) - FlowDroid is a context-, flow-, field-, object-sensitive and lifecycle-aware static taint analysis tool for Android applications.\r\n\r\n* [Lint](http://developer.android.com/tools/help/lint.html) - The Android lint tool is a static code analysis tool that checks your Android project source files for potential bugs and optimization improvements for correctness, security, performance, usability, accessibility, and internationalization.\r\n\r\n* [Smali CFGs](https://github.com/EugenioDelfa/Smali-CFGs) - Smali Control Flow Graph's\r\n\r\n* [Thresher](http://pl.cs.colorado.edu/projects/thresher/) - Thresher is a static analysis tool that specializes in checking heap reachability properties. Its secret sauce is using a coarse up-front points-to analysis to focus a precise symbolic analysis on the alarms reported by the points-to analysis.\r\n\r\n##Dynamic Analysis Tools\r\n\r\n* [Droidbox](https://code.google.com/p/droidbox/) - DroidBox is developed to offer dynamic analysis of Android applications\r\n\r\n* [Drozer](https://www.mwrinfosecurity.com/products/drozer/) - Needs no introduction\r\n\r\n* [Xposed Framework](http://forum.xda-developers.com/xposed/xposed-installer-versions-changelog-t2714053)\r\n\r\n* [Android Hooker](https://github.com/AndroidHooker/hooker) - This project provides various tools and applications that can be use to automaticaly intercept and modify any API calls made by a targeted application.\r\n\r\n##Reverse Engineering Tools\r\n\r\n* [Androguard](https://github.com/androguard/androguard) - Reverse engineering, Malware and goodware analysis of Android applications ... and more (ninja !)\r\n\r\n* [Android loadble Kernel Modules](https://github.com/strazzere/android-lkms) - It is mostly used for reversing and debugging on controlled systems/emulators.\r\n\r\n* [AndBug](https://github.com/swdunlop/AndBug) - Android Debugging Library\r\n\r\n* [ApkTool](https://code.google.com/p/android-apktool/) - A tool for reverse engineering Android Apk Files\r\n\r\n* [Bytecode-Viewer](https://github.com/Konloch/bytecode-viewer) - A Java 8 Jar & Android APK Reverse Engineering Suite (Decompiler, Editor, Debugger & More)\r\n\r\n* [Dex2Jar](https://code.google.com/p/dex2jar/) - Tools to work with android .dex and java .class files\r\n\r\n* [Fino](https://github.com/sysdream/fino) - Android small footprint inspection tool\r\n\r\n* [Introspy-Android](https://github.com/iSECPartners/Introspy-Android) - Blackbox tool to help understand what an Android application is doing at runtime and assist in the identification of potential security issues.\r\n\r\n* [JD-Gui](http://jd.benow.ca/) - Yet another fast Java Decompiler\r\n\r\n* [Simplify](https://github.com/CalebFenton/simplify) - Generic Android Deobfuscator\r\n\r\n* [smali](https://code.google.com/p/smali/) - An assembler/disassembler for Android's dex format\r\n\r\n\r\n##Others\r\n\r\n* [Android Vulnerability/Exploit List](https://docs.google.com/spreadsheet/pub?key=0Am5hHW4ATym7dGhFU1A4X2lqbUJtRm1QSWNRc3E0UlE&single=true&gid=0&output=html)\r\n\r\n* [Open Source Database of Android Malwares](https://code.google.com/p/androguard/wiki/DatabaseAndroidMalwares)\r\n\r\n\r\n##Android Security Libraries\r\n\r\n* [Android Password Store](https://github.com/zeapo/Android-Password-Store)\r\n\r\n* [Android Pinning](https://github.com/moxie0/AndroidPinning) - A standalone library project for certificate pinning on Android.\r\n\r\n* [Conceal By Facebook](https://github.com/facebook/conceal) - Conceal provides easy Android APIs for performing fast encryption and authentication of data.\r\n\r\n* [Dexguard](http://www.saikoa.com/dexguard) - DexGuard is our specialized optimizer and obfuscator for Android. Create apps that are faster, more compact, and more difficult to crack.\r\n\r\n* [Encryption](https://github.com/simbiose/Encryption) - Encryption is a simple way to create encrypted strings to Android project.\r\n\r\n* [CWAC-Security](https://github.com/commonsguy/cwac-security) - Helping You Help Your Users Defend Their Data\r\n\r\n* [IOCipher](https://github.com/guardianproject/IOCipher) - IOCipher is a virtual encrypted disk for apps without requiring the device to be rooted.\r\n\r\n* [NetCipher](https://github.com/guardianproject/NetCipher) - This is an Android Library Project that provides multiple means to improve network security in mobile applications.\r\n\r\n* [OpenPGP API](https://github.com/open-keychain/openpgp-api-lib) - The OpenPGP API provides methods to execute OpenPGP operations, such as sign, encrypt, decrypt, verify, and more without user interaction from background threads.\r\n\r\n* [OWASP Java HTML Sanitizer](https://code.google.com/p/owasp-java-html-sanitizer/)\r\n\r\n* [Proguard](http://proguard.sourceforge.net/) - ProGuard is a free Java class file shrinker, optimizer, obfuscator, and preverifier. It detects and removes unused classes, fields, methods, and attributes.\r\n\r\n* [Spongy Castle](https://github.com/rtyley/spongycastle) - a repackage of Bouncy Castle for Android\r\n\r\n* [SQL Cipher](https://www.zetetic.net/sqlcipher/sqlcipher-for-android/) - SQLCipher is an open source extension to SQLite that provides transparent 256-bit AES encryption of database files.\r\n\r\n* [Secure Preferences](https://github.com/scottyab/secure-preferences) - Android Shared preference wrapper than encrypts the keys and values of Shared Preferences.\r\n\r\n* [Trusted Intents](https://github.com/guardianproject/TrustedIntents) - Library for flexible trusted interactions between Android apps\r\n##Official Documents\r\n\r\n* [Android Security Overview](http://source.android.com/devices/tech/security/)\r\n* [Android Security Tips for Developers](http://developer.android.com/training/articles/security-tips.html)\r\n\r\n\r\n##Best Practices\r\n\r\n* [Projects/OWASP Mobile Security Project - Top Ten Mobile Controls](https://www.owasp.org/index.php/Projects/OWASP_Mobile_Security_Project_-_Top_Ten_Mobile_Controls)\r\n* [PCI Mobile Payment Acceptance\r\nSecurity Guidelines for Developers](https://www.pcisecuritystandards.org/documents/Mobile%20Payment%20Security%20Guidelines%20v1%200.pdf)\r\n\r\n##Android Security Research Papers\r\n\r\n* [Attacks on Android Clipboard](http://www.cis.syr.edu/~wedu/Research/paper/clipboard_attack_dimva2014.pdf)\r\n* [A Study of Android Application Security](http://www.cs.rice.edu/~sc40/pubs/enck-sec11.pdf)\r\n* [Attacks on Webview in the Android System](http://www.cis.syr.edu/~wedu/Research/paper/webview_acsac2011.pdf)\r\n* [Gues who's is Texting you?Evaluating Security of Smartphone Messaging Applications](https://www.sba-research.org/wp-content/uploads/publications/ndss2012_final.pdf)\r\n* [Evaluations of Security Solutions for Android Systems](http://arxiv.org/ftp/arxiv/papers/1502/1502.04870.pdf)\r\n* [Why Eve and Mallory Love Android:\r\nAn Analysis of Android SSL (In)Security](http://www2.dcsec.uni-hannover.de/files/android/p50-fahl.pdf)\r\n* [The Impact of Vendor Customizations on Android Security](https://www.cs.ncsu.edu/faculty/jiang/pubs/CCS13.pdf)\r\n* [The Peril of Fragmentation: Security Hazards in\r\nAndroid Device Driver Customizations](http://www.cs.indiana.edu/~zhou/files/sp14_zhou.pdf)\r\n* [An Empirical Study of Cryptographic Misuse\r\nin Android Applications](http://www.cs.ucsb.edu/~chris/research/doc/ccs13_cryptolint.pdf)\r\n* [Android Permissions:User Attention, Comprehension, and Behavior](http://www.guanotronic.com/~serge/papers/soups12-android.pdf)\r\n* [AppsPlayground: Automatic Security Analysis of\r\nSmartphone Applications](http://www.cs.northwestern.edu/~ychen/Papers/AppsPlayground.pdf)\r\n* [Understanding and Improving App Installation Security\r\nMechanisms through Empirical Analysis of Android](http://users.encs.concordia.ca/~clark/papers/2012_spsm.pdf)\r\n* [Android Malware Situation](https://www.incibe.es/extfrontinteco/img/File/intecocert/EstudiosInformes/android_malware_situation.pdf)\r\n* [PowerSpy: Location Tracking using Mobile Device Power Analysis](http://arxiv.org/pdf/1502.03182v2)\r\n* [EdgeMiner: Automatically Detecting Implicit\r\nControl Flow Transitions through the Android Framework](http://yinzhicao.org/EdgeMiner/2015_ndss_edgeminer.pdf)\r\n* [Detecting Passive Content Leaks and Pollution in Android Applications ](http://www.yajin.org/papers/ndss13_contentscope.pdf)\r\n* [DIVILAR: Diversifying Intermediate Language for Anti-Repackaging on Android Platform ](http://www.yajin.org/papers/codaspy14_divilar.pdf)\r\n* [ RiskRanker: Scalable and Accurate Zero-day Android Malware Detection](http://www.csc.ncsu.edu/faculty/jiang/pubs/MOBISYS12.pdf)\r\n* [DroidMOSS: Detecting Repackaged Smartphone Applications in Third-Party Android Marketplaces](http://www.csc.ncsu.edu/faculty/jiang/pubs/CODASPY12.pdf)\r\n* [Dissecting Android Malware: Characterization and Evolution](http://www.yajin.org/papers/oakland12_sok.pdf)\r\n* [Hey, You, Get off of My Market: Detecting Malicious Apps in Official and Alternative Android Markets](http://www.csc.ncsu.edu/faculty/jiang/pubs/NDSS12_DROIDRANGER.pdf)\r\n* [Systematic Detection of Capability Leaks in Stock Android Smartphones](http://www.csc.ncsu.edu/faculty/jiang/pubs/NDSS12_WOODPECKER.pdf)\r\n\r\n##Books\r\n| Book                                                                                        | Year | Author                                                                                                                                   | Link                                                                                           |\r\n| ------------------------------------------------------------------------------------------- | ---- | ---------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------- |\r\n| The Mobile Application Hacker's Handbook                                                    | 2015 | Dominic Chell, Tyrone Erasmus, Jon Lindsay, Shaun Colley, Ollie Whitehouse                                                               | [Link](http://www.amazon.com/The-Mobile-Application-Hackers-Handbook/dp/1118958500)            |\r\n| Android Hacker's Handbook                                                                   | 2014 | Joshua J. Drake, Zach Lanier, Collin Mulliner, Pau Oliva, Stephen A. Ridley, Georg Wicherski                                             | [Link](http://www.amazon.com/Android-Hackers-Handbook-Joshua-Drake/dp/111860864X)              |\r\n| Android Security Internals                                                                  | 2014 | Nikolay Elenkov                                                                                                                          | [Link](http://www.nostarch.com/androidsecurity)                                                |\r\n| Learning Pentesting for Android                                                             | 2014 | Aditya Gupta                                                                                                                             | [Link](http://www.amazon.in/Learning-Pentesting-Android-Aditya-Gupta/dp/1783288981)            |\r\n| Android Security Cookbook                                                                   | 2013 | Keith Makan, Scott-Alexander-Brown                                                                                                       | [Link](http://www.amazon.com/dp/1782167161/?tag=packtpubli-20)                                 |\r\n| Android Malware                                                                             | 2013 | Xuxian Jiang, Yajin Zhou                                                                                                                 | [Link](http://www.amazon.com/Android-Malware-SpringerBriefs-Computer-Science/dp/1461473934/)   |\r\n| Android Application Security Essentials                                                     | 2013 | Pragati Rai                                                                                                                              | [Link](http://www.amazon.com/Android-Application-Security-Essentials-Pragati/dp/1849515603/)   |\r\n| Hacking Exposed Mobile Security Secrets & Solutions                                         | 2013 | Neil Bergman, Mike Stanfield, Jason Rouse, Joel Scrambay, Sarath Geethakumar, Swapnil Deshmukh, John Steven, Mike Price, Scott Matsumoto | [Link](http://www.amazon.com/Hacking-Exposed-Security-Secrets-Solutions/dp/0071817018/)        |\r\n| Android Security: Attacks and Defenses                                                      | 2013 | Anmol Misra, Abhishek Dubey                                                                                                              | [Link](http://www.amazon.com/Android-Security-Defenses-Anmol-Misra/dp/1439896461/)             |\r\n| Mobile Phone Security and Forensics: A Practical Approach                                   | 2012 | I.I. Androulidakis                                                                                                                       | [Link](http://www.amazon.com/Mobile-Phone-Security-Forensics-SpringerBriefs/dp/1461416493/)    |\r\n| Android Apps Security                                                                       | 2012 | Sheran Gunasekera                                                                                                                        | [Link](http://www.amazon.com/Android-Apps-Security-Sheran-Gunasekera/dp/1430240628)            |\r\n| Decompiling Android                                                                         | 2012 | Godfrey Nolan                                                                                                                            | [Link](http://www.amazon.com/Decompiling-Android-Godfrey-Nolan/dp/1430242485/)                 |\r\n| Mobile Application Security                                                                 | 2012 | Himanshu Dwivedi, Chris Clark and David Thiel                                                                                            | [Link](http://www.amazon.com/Mobile-Application-Security-Himanshu-Dwivedi/dp/0071633561/)      |\r\n| XDA Developers' Android Hacker's Toolkit                                                    | 2012 | Jason Tyler, Will Verduzco                                                                                                               | [Link](http://www.amazon.com/XDA-Developers-Android-Hackers-Toolkit/dp/1119951380/)            |\r\n| Android Forensics: Investigation, Analysis and Mobile Security for Google Android'          | 2011 | Andrew Hoog                                                                                                                              | [Link](http://www.amazon.com/Android-Forensics-Investigation-Analysis-Security/dp/1597496510/) |\r\n| Application Security for the Android Platform: Processes, Permissions, and Other Safeguards | 2011 | Jeff Six                                                                                                                                 | [Link](http://www.amazon.com/Application-Security-Android-Platform-Permissions/dp/1449315070/) |\r\n| Embedded Java Security: Security for Mobile Devices                                         | 2010 | Mourad Debbabi, Mohamed Saleh, Chamseddine Talhi and Sami Zhioua                                                                         | [Link](http://www.amazon.com/Embedded-Java-Security-Mobile-Devices/dp/1849966230/)             |","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}